name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  release-linux:
    name: Build the Linux release artifact
    runs-on: [ self-hosted, linux, x64 ]
    # Trust that the runner has an sbuild chroot
    # sudo apt install autorevision sbuild-debian-developer-setup debhelper dh-golang
    # newgrp sbuild
    # sudo sbuild-debian-developer-setup --suite=stable

    steps:
      - name: Remove old release artifacts
        run: rm -f ../kel-agent_*

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: make test

      - name: Build Debian package
        run: make deb-package

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ../*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-rpi:
    name: Build the Raspberry Pi release artifact
    runs-on: [ self-hosted, linux, ARM ]
    # Trust that the runner has an sbuild chroot:
    # sudo apt install autorevision sbuild-debian-developer-setup debhelper dh-golang
    # newgrp sbuild
    # sudo sbuild-debian-developer-setup --suite=stable

    steps:
      - name: Remove old release artifacts
        run: rm -f ../kel-agent_*

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: make test

      - name: Build Debian package
        run: make deb-package

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ../*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-flatpak:
    name: Build the Flatpak release artifact
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-20.08
      options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Flatpak
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v4
        with:
          bundle: kel-agent.flatpak
          manifest-path: flatpak/radio.k0swe.Kel_Agent.yml
          branch: main
          cache-key: flatpak-builder-${{ github.sha }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: kel-agent.flatpak
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    name: Build the MacOS release artifact
    runs-on: macos-latest

    steps:
      - name: Install WhiteBox Packages
        run: |
          curl "http://s.sudre.free.fr/Software/files/Packages.dmg" --output ${HOME}/Packages.dmg
          sudo hdiutil attach ${HOME}/Packages.dmg
          find /Volumes -name "Install Packages.pkg" | xargs -I {} sudo installer -pkg "{}" -target /

      - name: Create keychain with signing certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          keychain: k0swe
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: make test

      - name: Build Mac package
        run: make mac-package

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: kel-agent_mac.pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    name: Build the Windows release artifact
    runs-on: windows-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.15.x

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: make test

      - name: Build Windows package
        run: |
          $env:PATH += ";$env:WIX\bin"
          make win-package

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: win/kel-agent.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
